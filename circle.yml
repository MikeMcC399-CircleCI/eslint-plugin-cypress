version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/node:22.14.0
    resource_class: medium

jobs:
  build-test-project:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Build tarball
          command: npm pack
      - run:
          name: Get version
          command: |
            echo "PLUGIN_VERSION=$(jq -r '.version' package.json)" >> $BASH_ENV
            cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - eslint-plugin-cypress-*.tgz
            - bash.env

  test-test-project:
    description: Run ESLint with different configurations
    parameters:
      eslint-version:
        description: Version of ESLint to use
        default: 'latest'
        type: string
      config-file:
        description: Configuration file
        default: 'default'
        type: string
    executor: docker-executor
    working_directory: ./test-project
    steps:
      - checkout:
          path: ../
      - attach_workspace:
          at: .
      - run:
          name: Get plugin version
          command: |
            cat bash.env >> $BASH_ENV
      - run:
          name: Install dependencies
          command: |
            npm install eslint@<< parameters.eslint-version>> ./eslint-plugin-cypress-$PLUGIN_VERSION.tgz -D
      - run:
          name: Display ESLint version
          command: |
            npx eslint --version
      - run:
          command: |
            pwd
            ls -al
      - run:
          name: lint with example
          command: |
            npx eslint --config ./eslint-configs/eslint.<< parameters.config-file >>.mjs .

workflows:
  project-test:
    jobs:
      - build-test-project
      - test-test-project:
          eslint-version: '9'
          config-file: default
          requires:
            - build-test-project

              #     matrix:
  #       config: [
  #         # non-legacy configurations correspond to examples in README
  #         default,
  #         recommended,
  #         globals,
  #         # legacy configuration are adapted from README examples
  #         legacy/.eslintrc.custom,
  #         legacy/.eslintrc.recommended,
  #         ]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: build
  #         path: ./test-project
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "lts/*"
  #     - name: npm install
  #       run: |
  #         npm install ./eslint-plugin-cypress-${{ needs.build.outputs.version }}.tgz -D
  #       working-directory: ./test-project
  #     - name: linting
  #       if: ${{ ! startsWith(matrix.config, 'legacy/') }}
  #       run: |
  #         npx eslint --config ./eslint-configs/eslint.${{ matrix.config }}.mjs
  #       working-directory: ./test-project
  #     - name: linting-legacy
  #       if: ${{ startsWith(matrix.config, 'legacy/') }}
  #       env:
  #         ESLINT_USE_FLAT_CONFIG: false
  #       run: |
  #         npx eslint --config ./eslint-configs/${{ matrix.config }}.json .
  #       working-directory: ./test-project
